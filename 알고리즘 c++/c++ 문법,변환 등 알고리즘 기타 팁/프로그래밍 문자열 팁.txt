문자(char)->문자열(string)
char c;	string s({c});

문자(c)->숫자(int)
int a = char b-'0';
-48로도 가능

숫자(int)->문자(char)
char a = int b+'0';
 string s;	s[i] = int b+'0';

문자열(string)->숫자(int)
string s;	int a = stoi(s);
11버전부터 사용가능

숫자(int)->문자열(string)
int a;	string s=to_string(a);
11버전부터 사용가능

문자열 합치기
string s1,s2; string s=s1+s2;


아스키코드로 문자열구분 쉽다
str[k]>='a'&&str[k]<='z'
str[k]>='A'&&str[k]<='Z'
str[k]>='0'&&str[k]<='9'
str[k]==' '



문자열에서 아래와 같이 유니코드로 변환 가능

소문자 구분의 경우
'a'-97=0	(a의 유니코드가 97이다)
"b"-97=1
'a'-'a'=0

대문자의 경우
'A'-65=0
'B'-65=1
'A'-'A'=0

숫자의 경우
'0'-'0'=0
'1'-'0'=1



string q1="qwe";

string 비교
q1=="qwe"

string 안의 문자1개 비교
q1[1]=='w'
char a='w';    a==q1[1];    a=='w';
